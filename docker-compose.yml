services:
  mongo:
    image: mongo:6
    container_name: aws-mongo
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass

  mongo-express:
    image: mongo-express
    container_name: aws-mongo-express
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: pass
      ME_CONFIG_SITE_BASEURL: /db
    depends_on:
      - mongo

  gin-api:
    build: ./gin-api
    env_file: ./gin-api/.env
    depends_on:
      - mongo
    ports:
      - "127.0.0.1:8082:8082"

  frontend:
    build: ./frontend
    env_file: ./frontend/.env
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - gin-api

volumes:
  mongo-data:

# local development
# services:
#   mongo:
#     image: mongo:6
#     container_name: aws-mongo
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: pass

#   mongo-express:
#     image: mongo-express
#     container_name: aws-mongo-express
#     ports:
#       - "8081:8081"
#     environment:
#       ME_CONFIG_MONGODB_SERVER: mongo
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: pass
#       ME_CONFIG_BASICAUTH_USERNAME: root
#       ME_CONFIG_BASICAUTH_PASSWORD: pass
#   ME_CONFIG_SITE_BASEURL: /db
#     depends_on:
#       - mongo

#   gin-api:
#     build: ./gin-api
#     env_file: ./gin-api/.env
#     depends_on:
#       - mongo
#     ports:
#       - "8082:8082"

#   frontend:
#     build: ./frontend
#     env_file: ./frontend/.env
#     ports:
#       - "3000:3000"
#     depends_on:
#       - gin-api


# volumes:
#   mongo-data:

